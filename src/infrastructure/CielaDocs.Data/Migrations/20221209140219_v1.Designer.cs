// <auto-generated />
using System;
using CielaDocs.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CielaDocs.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221209140219_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CielaDocs.Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AllDay")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmplId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Card", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ArchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArchNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AssignedToId")
                        .HasColumnType("bigint");

                    b.Property<string>("CardGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CardMasterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CardOutId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CardRouteId")
                        .HasColumnType("int");

                    b.Property<int?>("CardStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletedNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrDocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CorrId")
                        .HasColumnType("int");

                    b.Property<string>("CorrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrTownId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DaysToResponse")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocKindOfId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("EdeliveryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRealCard")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsResponseNeeded")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSecured")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceivedTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("SigId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TmpDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TmpDocNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CardStatusId");

                    b.HasIndex("CorrId");

                    b.HasIndex("DocKindOfId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("ReceivedTypeId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SigId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.CardDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ArchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArchNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AssignedToId")
                        .HasColumnType("bigint");

                    b.Property<string>("CardGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CardMasterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CardOutId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CardRouteId")
                        .HasColumnType("int");

                    b.Property<int?>("CardStatusId")
                        .HasColumnType("int");

                    b.Property<string>("CardStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletedNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrDocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CorrId")
                        .HasColumnType("int");

                    b.Property<string>("CorrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrTownId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrTownName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DaysToResponse")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocKindOfId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DocTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRealCard")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsResponseNeeded")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSecured")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ParentDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentDocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceivedTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendingAndReceivingTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SigId")
                        .HasColumnType("int");

                    b.Property<string>("SigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TmpDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TmpDocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypesOfDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardDetails");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.CardDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CardGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActionLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInitialDoc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LockedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParentDocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("TmpGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardDocument");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.CardStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardStatus");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Cfg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EndSchoolYear")
                        .HasColumnType("int");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("NewSchoolYearDateAuto")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartSchoolYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cfg");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Correspondent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("TownId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("TownId");

                    b.ToTable("Correspondent");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Depart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InactiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Depart");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.DirectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AutoLockDocs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncludeInCoordinationList")
                        .HasColumnType("bit");

                    b.Property<bool?>("InternalUsage")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SendEmailToEmpl")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DirectType");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.DocType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocType");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Empl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAssignmentTask")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanTerminateDeloProcedure")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InactiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClerk")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmploye")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRepresentDepart")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LoginEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NkpdpositionId")
                        .HasColumnType("int");

                    b.Property<string>("Passw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionKindId")
                        .HasColumnType("int");

                    b.Property<string>("PublicEduNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffPositionId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SysUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartId");

                    b.HasIndex("NkpdpositionId");

                    b.HasIndex("PositionId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Empl");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.EmplDirect", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AnswerId")
                        .HasColumnType("bigint");

                    b.Property<string>("AnswerNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("EmplMessageId")
                        .HasColumnType("bigint");

                    b.Property<int?>("EmplProcedureId")
                        .HasColumnType("int");

                    b.Property<int?>("EmplRouteTemplateId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsReaded")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReply")
                        .HasColumnType("bit");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PerformedAction")
                        .HasColumnType("bit");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientDepartId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientEmplId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderDepartId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderEmplId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TmpGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectTypeId");

                    b.HasIndex("EmplMessageId");

                    b.HasIndex("RecipientEmplId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SenderEmplId");

                    b.ToTable("EmplDirect");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.EmplDirectDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CanDeleteDoc")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("EmplDirectGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TmpGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmplDirectDocument");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.EmplMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ActualCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("AnswerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompletionLevel")
                        .HasColumnType("int");

                    b.Property<string>("CompletionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ScheduledCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ScheduledStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TmpGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmplMessage");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.LetterOfAttorney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CanAgree")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanAuthor")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanResolution")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanSign")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanTask")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmplId")
                        .HasColumnType("int");

                    b.Property<int?>("EmplSubstituteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Onr")
                        .HasColumnType("int");

                    b.Property<string>("OrderNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TmpGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmplSubstituteId");

                    b.ToTable("LetterOfAttorney");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.LocalArea", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalArea");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Municipality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ekatte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Nkpdposition", b =>
                {
                    b.Property<int>("NkpdpositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NkpdpositionId"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NkpdsubGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("NkpdpositionId");

                    b.ToTable("Nkpdposition");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Reg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CanIssueTmpNum")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExpandedLength")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLeadingZero")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegCommonId")
                        .HasColumnType("int");

                    b.Property<int?>("RegGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("RegNum")
                        .HasColumnType("int");

                    b.Property<int?>("RegPriorityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResetDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("SaveNumForNewSchoolYear")
                        .HasColumnType("bit");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolYearsId")
                        .HasColumnType("int");

                    b.Property<string>("StorePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TmpNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegCommonId");

                    b.HasIndex("RegGroupId");

                    b.HasIndex("RegPriorityID");

                    b.HasIndex("SchoolId");

                    b.ToTable("Reg");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.RegCommon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegCommon");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.RegGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegGroup");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.RegPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegPriority");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Region", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ekatte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Reports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ReportCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportSubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CanClerkResponseOnBehalfOnEmpl")
                        .HasColumnType("bit");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<bool?>("EdeliveryAutoRegister")
                        .HasColumnType("bit");

                    b.Property<string>("EdeliveryCert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EdeliveryCertExpiredOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EdeliveryCertPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EdeliveryEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EdeliveryEnabledOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EdeliverySigId")
                        .HasColumnType("int");

                    b.Property<string>("EdeliveryThumbprint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EmailNotificationEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NasmeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OblId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObstId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolYearsId")
                        .HasColumnType("int");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("School");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.SchoolYears", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EndYear")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolYears");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.SendingAndReceivingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SendingAndReceivingType");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.StatCardData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StatCardData");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.TaskData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ActualCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CardId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompletionLevel")
                        .HasColumnType("int");

                    b.Property<string>("CompletionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmplMessageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecipientEmplId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderEmplId")
                        .HasColumnType("int");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TmpGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskData");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskStatus");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Town", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kmetstvo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oblast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obstina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Town");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.TypesOfDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypesOfDocument");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Card", b =>
                {
                    b.HasOne("CielaDocs.Domain.Entities.CardStatus", "CardStatus")
                        .WithMany("Cards")
                        .HasForeignKey("CardStatusId");

                    b.HasOne("CielaDocs.Domain.Entities.Correspondent", "Corr")
                        .WithMany("Cards")
                        .HasForeignKey("CorrId");

                    b.HasOne("CielaDocs.Domain.Entities.TypesOfDocument", "DocKindOf")
                        .WithMany()
                        .HasForeignKey("DocKindOfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.DocType", "DocType")
                        .WithMany()
                        .HasForeignKey("DocTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.SendingAndReceivingType", "ReceivedType")
                        .WithMany()
                        .HasForeignKey("ReceivedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.School", "School")
                        .WithMany("Cards")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.Reg", "Sig")
                        .WithMany()
                        .HasForeignKey("SigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardStatus");

                    b.Navigation("Corr");

                    b.Navigation("DocKindOf");

                    b.Navigation("DocType");

                    b.Navigation("ReceivedType");

                    b.Navigation("School");

                    b.Navigation("Sig");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Correspondent", b =>
                {
                    b.HasOne("CielaDocs.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("CielaDocs.Domain.Entities.School", "School")
                        .WithMany("Correspondents")
                        .HasForeignKey("SchoolId");

                    b.HasOne("CielaDocs.Domain.Entities.Town", "Town")
                        .WithMany()
                        .HasForeignKey("TownId");

                    b.Navigation("Country");

                    b.Navigation("School");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Empl", b =>
                {
                    b.HasOne("CielaDocs.Domain.Entities.Depart", null)
                        .WithMany("Empls")
                        .HasForeignKey("DepartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.Nkpdposition", "Nkpdposition")
                        .WithMany()
                        .HasForeignKey("NkpdpositionId");

                    b.HasOne("CielaDocs.Domain.Entities.Position", null)
                        .WithMany("Empls")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.School", "School")
                        .WithMany("Empls")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nkpdposition");

                    b.Navigation("School");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.EmplDirect", b =>
                {
                    b.HasOne("CielaDocs.Domain.Entities.DirectType", "DirectType")
                        .WithMany()
                        .HasForeignKey("DirectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.EmplMessage", "EmplMessage")
                        .WithMany()
                        .HasForeignKey("EmplMessageId");

                    b.HasOne("CielaDocs.Domain.Entities.Empl", "RecipientEmpl")
                        .WithMany()
                        .HasForeignKey("RecipientEmplId");

                    b.HasOne("CielaDocs.Domain.Entities.School", null)
                        .WithMany("EmplDirects")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CielaDocs.Domain.Entities.Empl", "SenderEmpl")
                        .WithMany()
                        .HasForeignKey("SenderEmplId");

                    b.Navigation("DirectType");

                    b.Navigation("EmplMessage");

                    b.Navigation("RecipientEmpl");

                    b.Navigation("SenderEmpl");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.LetterOfAttorney", b =>
                {
                    b.HasOne("CielaDocs.Domain.Entities.Empl", "EmplSubstitute")
                        .WithMany()
                        .HasForeignKey("EmplSubstituteId");

                    b.Navigation("EmplSubstitute");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Reg", b =>
                {
                    b.HasOne("CielaDocs.Domain.Entities.RegCommon", "RegCommon")
                        .WithMany("Regs")
                        .HasForeignKey("RegCommonId");

                    b.HasOne("CielaDocs.Domain.Entities.RegGroup", "RegGroup")
                        .WithMany("Regs")
                        .HasForeignKey("RegGroupId");

                    b.HasOne("CielaDocs.Domain.Entities.RegPriority", "RegPriority")
                        .WithMany("Regs")
                        .HasForeignKey("RegPriorityID");

                    b.HasOne("CielaDocs.Domain.Entities.School", "School")
                        .WithMany("Regs")
                        .HasForeignKey("SchoolId");

                    b.Navigation("RegCommon");

                    b.Navigation("RegGroup");

                    b.Navigation("RegPriority");

                    b.Navigation("School");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.SchoolYears", b =>
                {
                    b.HasOne("CielaDocs.Domain.Entities.School", null)
                        .WithMany("SchoolYears")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.CardStatus", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Correspondent", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Depart", b =>
                {
                    b.Navigation("Empls");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.Position", b =>
                {
                    b.Navigation("Empls");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.RegCommon", b =>
                {
                    b.Navigation("Regs");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.RegGroup", b =>
                {
                    b.Navigation("Regs");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.RegPriority", b =>
                {
                    b.Navigation("Regs");
                });

            modelBuilder.Entity("CielaDocs.Domain.Entities.School", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Correspondents");

                    b.Navigation("EmplDirects");

                    b.Navigation("Empls");

                    b.Navigation("Regs");

                    b.Navigation("SchoolYears");
                });
#pragma warning restore 612, 618
        }
    }
}

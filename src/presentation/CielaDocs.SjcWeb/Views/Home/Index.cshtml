@using System.Security.Principal
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@{
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
    ViewData["Title"] = "Home Page";
}
@if (User?.Identity?.IsAuthenticated??false)
{
    @Html.Hidden("CourtId",(int)ViewBag.CourtId)
    @Html.Hidden("UserId",(int)ViewBag.UserId)
    @Html.Hidden("CourtName",(string)ViewBag.CourtName)
    @await Html.PartialAsync("_ModalDialogPartial")
    <div id="popup"></div>
    <div class="container">
        <div class="spacer_20"></div>
        <h3 style="color:red;">@ViewBag.AppMode</h3>
        <div class="spacer_20"></div>
        <div class="row">
            <div class="col-md-12">
                <h4 class="section-titlepara">Въвеждане на данни</h4>
            </div>
            <div class="border"></div>
            </div>

            <div class="row">

                <div class="col-md-3">
                   
                    <div class="capsule-at">
                        <span id="cntExpiredCardMsg" class="badge badge-pill badge-info" title="Планиране" style="cursor:pointer;"></span>
                        <div id="programFilter" style="margin-top:10px;">
                        <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Highlighted-WF.png")" alt="." />
                            <p class="button_text-at">Планиране по бюджетни програми</p>
                        <p>Планиране по бюджетни програми</p>
                      </div>
                    </div>
                </div>
            <div class="col-md-3">
                  <div class="capsule-at">
                        <div id="mainDataItemCtrl" style="margin-top:10px;">
                        <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Data-add-WF.png")" alt="." />
                            <p class="button_text-at">Входни данни</p>
                            <p>Входни данни за изчисляване на показатели...</p>
                        </div>
                    </div>
            </div>
             <div class="col-md-3">
                <div class="capsule-at">
                    <div id="mainDataCtrl" style="margin-top:10px;">
                        <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/calendar.png")" alt="." />
                        <p class="button_text-at">Данни за показатели-месечни</p>
                        <p>Данни за показатели и входни данни за отчетна единица...</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="capsule-at">
                    <div id="mainPeriodDataCtrl" style="margin-top:10px;">
                        <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/DateTime_01.png")" alt="." />
                        <p class="button_text-at">Данни за показатели за период</p>
                        <p>Данни за показатели за период...</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">

            <div class="col-md-3">

                <div class="capsule-at">
                    <span id="cntExpiredCardMsg" class="badge badge-pill badge-info" title="Планиране" style="cursor:pointer;"></span>
                    <div id="approvedFilter" style="margin-top:10px;">
                        <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Paper-WF.png")" alt="." />
                        <p class="button_text-at">Утвърден бюджет</p>
                        <p>Данни за утвърден бюджет за година</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3" id="importKonto">
                <div class="capsule-at">

                    <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Excel-Import.png")" alt="." />
                    <p class="button_text-at">Импорт на данни от Конто</p>
                    <p>Импорт на данни от Конто...</p>

                </div>

            </div>
            <div class="col-md-3" id="importPbKonto">
                <div class="capsule-at">

                    <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/ExcelOnline.png")" alt="." />
                    <p class="button_text-at">Импорт на данни проекто бюджет</p>
                    <p>Импорт на данни проекто бюджет за избран период...</p>

                </div>

            </div>
            <div class="col-md-3" id="importVss">
                <div class="capsule-at">
                    <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Data-Import.png")" alt="." />
                    <p class="button_text-at">Импорт на входни данни</p>
                    <p>Импорт на входни данни за период...</p>
                </div>
            </div>
        
         
        </div>
        <div class="row">
            <div class="col-md-3" id="reports">
                <div class="capsule-at">
                    <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Printer-WF.png")" alt="." />
                    <p class="button_text-at">Справки и отчети</p>
                    <p>Справки и отчети от системата...</p>
                </div>
            </div>
            <div class="col-md-3" id="admin">
                <div class="capsule-at">

                    <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Setting_2-WF.png")" alt="." />
                    <p class="button_text-at">Администратор</p>
                    <p>Администриране и конфигуриране на системата...</p>

                </div>

            </div>
            <div class="col-md-3" id="docarchive">
                <div class="capsule-at">

                    <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Auto-Archive-WF.png")" alt="." />
                    <p class="button_text-at">Архив на документи</p>
                    <p>Архив на документи, справки, отчети...</p>

                </div>

            </div>
                <div class="col-md-3" id="help">
                    <div class="capsule-at">
                        <img class="imgCapsule-at img-responsive" src="@Url.Content("~/images/Question.png")" alt="." />
                        <p class="button_text-at">Помощ</p>
                        <p>Ръководство на потребителя за работа със системата...</p>
                    </div>
                </div>
        </div>
           
 
    </div>

        }
else{

    <section id="intro" class="clearfix">
        <div class="container">
            <h3 style="color:red;">@ViewBag.AppMode</h3>
            <div class="intro-img">
                <img src=@Url.Content("~/images/intro-img.svg") alt="" class="img-fluid">
            </div>

            <div class="intro-info">
                <h2>Висш съдебен съвет</h2>
                <h4>Програмно бюджетиране</h4>
                <h3>&nbsp;</h3>
                <div>
                    <a asp-area="" asp-controller="Account" asp-action="Login" class="btn-services">Влез ></a>
                    <a asp-area="" asp-controller="Auth" asp-action="Login" class="btn-services">Влез с КЕП ></a>
                </div>
            </div>

        </div>
    </section>

}
@await Html.PartialAsync("_CommonDialogPartial")
@section scripts {
 <script>
       var anyModal = $('#anyModal');
       var anyTitle = $('#anyTitle');
       var anyContent = $('#anyContent');
       const commonModal = $('#commonModal');
       const commonContent = $('#commonContent');
       const commonTitle = $('#titleLabel');

       function addMainDataFilter() {
            let spurl = Ciela.baseUrl + "Home/AddMainDataFilterPartial";
            anyContent.empty();
            anyTitle.text('Условия');
            anyContent.html('<p>Зареждам данни…</p>')
            $.ajax({
                type: 'Get',
                url: spurl,
                data: {},
                success: function (data) {
                    anyContent.html(data);
                }
            });

            anyModal.modal('show');
        }
        function addMainDataItemFilter() {
            let spurl = Ciela.baseUrl + "Home/AddMainDataItemFilterPartial";
            anyContent.empty();
            anyTitle.text('Условия');
            anyContent.html('<p>Зареждам данни…</p>')
            $.ajax({
                type: 'Get',
                url: spurl,
                data: {},
                success: function (data) {
                    anyContent.html(data);
                }
            });

            anyModal.modal('show');
        }
        function addProgramDataFilter() {
            let spurl = Ciela.baseUrl + "Home/AddProgramDataFilterPartial";
            anyContent.empty();
            anyTitle.text('Условия');
            anyContent.html('<p>Зареждам данни…</p>')
            $.ajax({
                type: 'Get',
                url: spurl,
                data: {},
                success: function (data) {
                    anyContent.html(data);
                }
            });

            anyModal.modal('show');
        }
    $(function() {
            window.localStorage.setItem('CourtId', $('#CourtId').val());
            window.localStorage.setItem('UserId', $('#UserId').val());
            window.localStorage.setItem('CourtName', $('#CourtName').val());
            window.localStorage.removeItem('cardfilter');

 
        $("#admin").on("click", function () {
            redirectme("@Url.Action("Index", "Home", new { area = "Admin" })");
        });
            $("#reports").on("click", function () {
                redirectme("@Url.Action("Index", "Reports", new { area = "" })");
            });
            $("#programFilter").on("click", function () {
                popup.option({
                    contentTemplate: () => popupContentTemplate(3)
                });
                popup.show();
        });
            $("#approvedFilter").on("click", function () {
                popup.option({
                    contentTemplate: () => popupContentTemplate(6)
                });
                popup.show();
            });
            $("#importKonto").on("click", function () {
                redirectme("@Url.Action("Index", "ImportKonto")");
            });
            $("#importPbKonto").on("click", function () {
                redirectme("@Url.Action("Index", "ImportPbKonto")");
            });
            $("#importVss").on("click", function () {
                popup.option({
                    contentTemplate: () => popupContentTemplate(4)
                });
                popup.show();
            });
            $("#docarchive").on("click", function () {
            redirectme("@Url.Action("Index", "DocumentUploader")");
        });
            $("#help").on("click", function () {
                redirectme("@Url.Action("Index", "Help")");
            });
            $("#mainDataCtrl").on("click", function () {
                popup.option({
                    contentTemplate: () => popupContentTemplate(1)
                });
                popup.show();
            });
            $("#mainPeriodDataCtrl").on("click", function () {
                popup.option({
                    contentTemplate: () => popupContentTemplate(5)
                });
                popup.show();
            });
            $("#mainDataItemCtrl").on("click", function () {
                popup.option({
                    contentTemplate: () => popupContentTemplate(2)
                });
                popup.show();
            });

            //---------------------------------------
            const menuData = [ {
                id: '5',
                name: 'Помощ',
                items: [
                {
                    id: '5_2',
                    name: 'Обратна връзка',
                },
                 {
                    id: '5_4',
                    name: 'Ръководство на потребителя(pdf)',
                },
                ],

            }];
            const dxMenu = $('#main-menu').dxMenu({
                dataSource: menuData,
                hideSubmenuOnMouseLeave: false,
                displayExpr: 'name',
                onItemClick(data) {
                    const item = data.itemData;
                    if (item.id) {

                        switch (item.id) {
                            case '4_1':
                                redirectme("@Url.Action("Index", "Home", new { area = "Admin" })");
                                break;
                            case '5_1':
                                popup.option({
                                    contentTemplate: () => popupContentTemplate(0)
                                });
                                popup.show();
                                break;
                            case '5_2':
                                redirectme("@Url.Action("Feedback", "Home", new { area = "" })");
                                break;
                                case '5_4':
                                    var element = document.createElement('a');
                                    element.setAttribute('href', "@Url.Content("~/help/UserGuide.pdf")");
                                    element.style.display = 'none';
                                    document.body.appendChild(element);
                                    element.click();
                                    document.body.removeChild(element);
                            
                                break;
                           
                            case '6_1':
                                break;
                                case '9_1':
                                redirectme("@Url.Action("Index", "Report")");
                                break;

                        }
                    }
                },
            }).dxMenu('instance');

            const showSubmenuModes = [{
                name: 'onHover',
                delay: { show: 0, hide: 500 },
            }, {
                name: 'onClick',
                delay: { show: 0, hide: 300 },
            }];
    });
     
$('#btnAnySave').on('click', function() { 
     
        var logData=$("#EmplLogFilterForm").serialize();
        $.ajax({
            url: "@Url.Action("EmplLogFilter", "Home" ,new {area=""})",
            method: 'POST',
            dataType: 'json',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: logData,
        })
            .done(function(result) {
                 if (result.success === true) {
                    let cardmovesUrl = "@Url.Action("LoadEmplLogReportFilterGrid", "Home" ,new {area=""})" + "/?reportGuid=" + result.ReportGuid;
                    window.open(cardmovesUrl, '_blank');
                    anyModal.modal("hide");
                }
                else {
                    showMsg(result.msg);
                }
            })
            .fail(function() {
               showMsg('Failed to save.');
            });
    });
            $('#btnAnyCancel').on('click', function () {
                anyModal.modal("hide");
            });

    
        function OnClosePopupEventHandlerEx(arg, e) {
            switch (arg) {
                case 'popUpOk':
                    commonModal.modal('hide');
                    break;
                case 'popUpClose':
                    commonModal.modal('hide');
                    break;
                case 'mainDataFilterOk':
                    popup.hide();
                    applyMainDataFilter(e);
                    break;
                case 'mainDataItemFilterOk':
                    popup.hide();
                    applyMainDataItemFilter(e);
                    break;
                case 'programDataFilterOk':
                    popup.hide();
                    applyProgramDataFilter(e);
                    break;
                case 'periodDataItemFilterOk':
                    popup.hide();
                    applyPeriodDataItemFilter(e);
                    break;
                case 'mainDataPeriodFilterOk':
                    applyMainDataPeriodFilter(e);
                    break;
                case 'approvedDataFilterOk':
                    popup.hide();
                    applyApprovedDataFilter(e);
                    break;
            }
        }
        const popupContentTemplate = function (id) {
            let cnturl;
            switch (id) {
                case 0: cnturl = "@Url.Action("AuthorshipPartial", "Home")";
                    break;
                case 1: cnturl = "@Url.Action("AddMainDataFilterPartial", "Home")";
                    break;
                case 2: cnturl = "@Url.Action("AddMainDataItemFilterPartial", "Home")";
                    break;
                case 3: cnturl = "@Url.Action("AddProgramDataFilterPartial", "Home")";
                    break;
                case 4: cnturl = "@Url.Action("AddPeriodDataItemFilterPartial", "Home")";
                    break;
                case 5: cnturl = "@Url.Action("AddMainDataPeriodFilterPartial", "Home")";
                    break;
                case 6: cnturl = "@Url.Action("AddApprovedDataItemFilterPartial", "Home")";
                    break;
                default: cnturl = "@Url.Action("AuthorshipPartial", "Home")";
                    break;
            }
           
            const scrollView = $('<div />');

            $.ajax({ url: cnturl, data: {}, method: 'Get', async: true, dataType: "html" })
                .done(function (result) {

                    scrollView.append($('<div id="emplr" />').html(result));
                    scrollView.dxScrollView({
                        width: '100%',
                        height: '100%',
                    });
                })
                .fail(function (xhr) {
                    alert('Грешка при зареждане на данни.' + xhr.status + ' -' + xhr.statusText + ' -' + xhr.responseText);
                });
            return scrollView;
        };
        const popup = $('#popup').dxPopup({
            contentTemplate: popupContentTemplate,
            width: 640,
            height: 'auto',

            container: '.dx-viewport',

            showTitle: true,
            title: 'Данни',
            visible: false,
            dragEnabled: true,
            hideOnOutsideClick: true,
            showCloseButton: true,
            position: {
                at: 'center',
                my: 'center',
                of: window,

                collision: {
                    x: 'none',
                    y: 'flip'
                },
                offset: '0 0'
            },

        }).dxPopup('instance');
     function applyMainDataFilter(e) { 
         var itm = e.split('|');
            $.ajax({
                beforeSend: function (request) {
                    request.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken')
                },

            url: "@Url.Action("SetMainDataFilter", "Home")", method: 'POST', data: { functionalSubAreaId: itm[0], courtId: itm[1], nm: itm[2], ny: itm[3] }

            }).done(function (result) {
                if (result.success === true) {
                    redirectme("@Url.Action("Index", "MainData")");
                }
                else {
                    DevExpress.ui.dialog.alert(result.msg,'Внимание');
                }
            })
                .fail(function (e) {
                    DevExpress.ui.notify('Failed to set filter! ' + e);
                });
     }
        function applyMainDataPeriodFilter(e) {
            var itm = e.split('|');
            $.ajax({
                beforeSend: function (request) {
                    request.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken')
                },

                url: "@Url.Action("SetMainDataFilter", "Home")", method: 'POST', data: { functionalSubAreaId: itm[0], courtId: itm[1], nm: itm[2], ny: itm[3] }

            }).done(function (result) {
                if (result.success === true) {
                    redirectme("@Url.Action("Index", "MainDataPeriod")");
                }
                else {
                    DevExpress.ui.dialog.alert(result.msg, 'Внимание');
                }
            })
                .fail(function (e) {
                    DevExpress.ui.notify('Failed to set filter! ' + e);
                });
        }
        function applyMainDataItemFilter(e) {
            var itm = e.split('|');
            $.ajax({
                beforeSend: function (request) {
                    request.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken')
                },

                url: "@Url.Action("SetMainDataItemFilter", "Home")", method: 'POST', data: {  courtId: itm[0], nm: itm[1], ny: itm[2] }

            }).done(function (result) {
                if (result.success === true) {
                    redirectme("@Url.Action("Index", "MainDataItm")");
                }
                else {
                    DevExpress.ui.dialog.alert(result.msg, 'Внимание');
                }
            })
                .fail(function (e) {
                    DevExpress.ui.notify('Failed to set filter! ' + e);
                });
        }
        function applyProgramDataFilter(e) {
            var itm = e.split('|');
            $.ajax({
                beforeSend: function (request) {
                    request.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken')
                },

                url: "@Url.Action("SetProgramDataFilter", "Home")", method: 'POST', data: { functionalSubAreaId: itm[0], ny: itm[1],currencyId:itm[2],currencyMeasureId:itm[3] }

            }).done(function (result) {
                if (result.success === true) {
                    redirectme("@Url.Action("Index", "ProgramDataItems")");
                }
                else {
                    DevExpress.ui.dialog.alert(result.msg, 'Внимание');
                }
            })
                .fail(function (e) {
                    DevExpress.ui.notify('Failed to set filter! ' + e);
                });
        }
        function applyPeriodDataItemFilter(e) {
            var itm = e.split('|');
            $.ajax({
                beforeSend: function (request) {
                    request.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken')
                },

                url: "@Url.Action("SetPeriodDataItemFilter", "Home")", method: 'POST', data: { courtId: itm[0], nm: itm[1], ny: itm[2] }

            }).done(function (result) {
                if (result.success === true) {
                    redirectme("@Url.Action("Index", "MainPeriodItm")");
                }
                else {
                    DevExpress.ui.dialog.alert(result.msg, 'Внимание');
                }
            })
                .fail(function (e) {
                    DevExpress.ui.notify('Failed to set filter! ' + e);
                });
        }
        function applyApprovedDataFilter(e) {
            var itm = e.split('|');
            $.ajax({
                beforeSend: function (request) {
                    request.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken')
                },

                url: "@Url.Action("SetApprovedDataFilter", "Home")", method: 'POST', data: { functionalSubAreaId: itm[0], ny: itm[1], currencyId: itm[2], currencyMeasureId: itm[3] }

            }).done(function (result) {
                if (result.success === true) {
                    redirectme("@Url.Action("Index", "ApprovedDataItems")");
                }
                else {
                    DevExpress.ui.dialog.alert(result.msg, 'Внимание');
                }
            })
                .fail(function (e) {
                    DevExpress.ui.notify('Failed to set filter! ' + e);
                });
        }
</script>
}
